// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220727113702_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Models.Models.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "7081b403-651f-4873-93c7-fedc696d5340",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "3b2ecafb-2f58-4360-97c8-f4181a9a4313",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Models.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AboutMe")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Models.Models.ApplicationUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Models.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Vehicles"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Properties"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Mobile Phones, Tablets, & Accessories"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Electronics & Home Appliances"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Home Furniture - Decor"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Fashion & Beauty"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "Pets - Accessories"
                        },
                        new
                        {
                            CategoryID = 8,
                            CategoryName = "Kids & Babies"
                        },
                        new
                        {
                            CategoryID = 9,
                            CategoryName = "Books, Sports & Hobbies"
                        },
                        new
                        {
                            CategoryID = 10,
                            CategoryName = "Jobs"
                        },
                        new
                        {
                            CategoryID = 11,
                            CategoryName = "Business - Industrial - Agriculture"
                        },
                        new
                        {
                            CategoryID = 12,
                            CategoryName = "Services"
                        });
                });

            modelBuilder.Entity("Models.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            CityName = "Alexandria"
                        },
                        new
                        {
                            LocationId = 2,
                            CityName = "Aswan"
                        },
                        new
                        {
                            LocationId = 3,
                            CityName = "Asyut"
                        },
                        new
                        {
                            LocationId = 4,
                            CityName = "Beheira"
                        },
                        new
                        {
                            LocationId = 5,
                            CityName = "Beni Suef"
                        },
                        new
                        {
                            LocationId = 6,
                            CityName = "Cairo"
                        },
                        new
                        {
                            LocationId = 7,
                            CityName = "Dakahlia"
                        },
                        new
                        {
                            LocationId = 8,
                            CityName = "Damietta"
                        },
                        new
                        {
                            LocationId = 9,
                            CityName = "Faiyum"
                        },
                        new
                        {
                            LocationId = 10,
                            CityName = "Gharbia"
                        },
                        new
                        {
                            LocationId = 11,
                            CityName = "Giza"
                        },
                        new
                        {
                            LocationId = 12,
                            CityName = "Ismailia"
                        },
                        new
                        {
                            LocationId = 13,
                            CityName = "Kafr El Sheikh"
                        },
                        new
                        {
                            LocationId = 14,
                            CityName = "Luxor"
                        },
                        new
                        {
                            LocationId = 15,
                            CityName = "Matruh"
                        },
                        new
                        {
                            LocationId = 16,
                            CityName = "Minya"
                        },
                        new
                        {
                            LocationId = 17,
                            CityName = "Monufia"
                        },
                        new
                        {
                            LocationId = 18,
                            CityName = "New Valley"
                        },
                        new
                        {
                            LocationId = 19,
                            CityName = "North Sinai"
                        },
                        new
                        {
                            LocationId = 20,
                            CityName = "Port Said"
                        },
                        new
                        {
                            LocationId = 21,
                            CityName = "Qalyubia"
                        },
                        new
                        {
                            LocationId = 22,
                            CityName = "Qena"
                        },
                        new
                        {
                            LocationId = 23,
                            CityName = "Red Sea"
                        },
                        new
                        {
                            LocationId = 24,
                            CityName = "Sharqia"
                        },
                        new
                        {
                            LocationId = 25,
                            CityName = "Sohag"
                        },
                        new
                        {
                            LocationId = 26,
                            CityName = "South Sinai"
                        },
                        new
                        {
                            LocationId = 27,
                            CityName = "Suez"
                        });
                });

            modelBuilder.Entity("Models.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"), 1L, 1);

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("LocationId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("UserID");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Models.Models.PostImage", b =>
                {
                    b.Property<int>("PostImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostImageID"), 1L, 1);

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("PostImageID");

                    b.HasIndex("PostId");

                    b.ToTable("PostImages");
                });

            modelBuilder.Entity("Models.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategoryID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            SubCategoryID = 1,
                            CategoryID = 1,
                            SubCategoryName = "Cars for Sale"
                        },
                        new
                        {
                            SubCategoryID = 2,
                            CategoryID = 1,
                            SubCategoryName = "Tyres, Batteries, Oils, &Accessories"
                        },
                        new
                        {
                            SubCategoryID = 3,
                            CategoryID = 1,
                            SubCategoryName = "Car Spare Parts"
                        },
                        new
                        {
                            SubCategoryID = 4,
                            CategoryID = 1,
                            SubCategoryName = "Motorcycles & Accessories"
                        },
                        new
                        {
                            SubCategoryID = 5,
                            CategoryID = 1,
                            SubCategoryName = "Motorcycles & Accessories"
                        },
                        new
                        {
                            SubCategoryID = 6,
                            CategoryID = 1,
                            SubCategoryName = "Boats - Watercraft"
                        },
                        new
                        {
                            SubCategoryID = 7,
                            CategoryID = 1,
                            SubCategoryName = "Heavy Trucks, Buses & Other Vehicles"
                        },
                        new
                        {
                            SubCategoryID = 8,
                            CategoryID = 2,
                            SubCategoryName = "Apartments & Duplex for Sale"
                        },
                        new
                        {
                            SubCategoryID = 9,
                            CategoryID = 2,
                            SubCategoryName = "Apartments & Duplex for Rent"
                        },
                        new
                        {
                            SubCategoryID = 10,
                            CategoryID = 2,
                            SubCategoryName = "Villas For Sale"
                        },
                        new
                        {
                            SubCategoryID = 11,
                            CategoryID = 2,
                            SubCategoryName = "Villas For Rent"
                        },
                        new
                        {
                            SubCategoryID = 12,
                            CategoryID = 2,
                            SubCategoryName = "Vacation Homes for Sale"
                        },
                        new
                        {
                            SubCategoryID = 13,
                            CategoryID = 2,
                            SubCategoryName = "Commercial for Sale"
                        },
                        new
                        {
                            SubCategoryID = 14,
                            CategoryID = 2,
                            SubCategoryName = "Buildings & Lands"
                        },
                        new
                        {
                            SubCategoryID = 15,
                            CategoryID = 3,
                            SubCategoryName = "Mobile Phones"
                        },
                        new
                        {
                            SubCategoryID = 16,
                            CategoryID = 3,
                            SubCategoryName = "Tablets"
                        },
                        new
                        {
                            SubCategoryID = 17,
                            CategoryID = 3,
                            SubCategoryName = "Mobile & Tablet Accessories"
                        },
                        new
                        {
                            SubCategoryID = 18,
                            CategoryID = 3,
                            SubCategoryName = "Mobile Numbers"
                        },
                        new
                        {
                            SubCategoryID = 19,
                            CategoryID = 4,
                            SubCategoryName = "Electronics & Home Appliances"
                        },
                        new
                        {
                            SubCategoryID = 20,
                            CategoryID = 4,
                            SubCategoryName = "TV - Audio - Video"
                        },
                        new
                        {
                            SubCategoryID = 21,
                            CategoryID = 4,
                            SubCategoryName = "Computers - Accessories"
                        },
                        new
                        {
                            SubCategoryID = 22,
                            CategoryID = 4,
                            SubCategoryName = "Video games - Consoles"
                        },
                        new
                        {
                            SubCategoryID = 23,
                            CategoryID = 4,
                            SubCategoryName = "Cameras - Imaging"
                        },
                        new
                        {
                            SubCategoryID = 24,
                            CategoryID = 4,
                            SubCategoryName = "Home Appliance"
                        },
                        new
                        {
                            SubCategoryID = 25,
                            CategoryID = 5,
                            SubCategoryName = "Bathroom"
                        },
                        new
                        {
                            SubCategoryID = 26,
                            CategoryID = 5,
                            SubCategoryName = "Bedroom"
                        },
                        new
                        {
                            SubCategoryID = 27,
                            CategoryID = 5,
                            SubCategoryName = "Dining Room"
                        },
                        new
                        {
                            SubCategoryID = 28,
                            CategoryID = 5,
                            SubCategoryName = "Fabrics - Curtains - Carpets"
                        },
                        new
                        {
                            SubCategoryID = 29,
                            CategoryID = 5,
                            SubCategoryName = "Garden - Outdoor"
                        },
                        new
                        {
                            SubCategoryID = 30,
                            CategoryID = 5,
                            SubCategoryName = "Home Decoration"
                        },
                        new
                        {
                            SubCategoryID = 31,
                            CategoryID = 5,
                            SubCategoryName = "Kitchen - Kitchenware"
                        },
                        new
                        {
                            SubCategoryID = 32,
                            CategoryID = 5,
                            SubCategoryName = "Lighting Tools"
                        },
                        new
                        {
                            SubCategoryID = 33,
                            CategoryID = 5,
                            SubCategoryName = "Living Room"
                        },
                        new
                        {
                            SubCategoryID = 34,
                            CategoryID = 5,
                            SubCategoryName = "Multiple/Other Furniture"
                        },
                        new
                        {
                            SubCategoryID = 35,
                            CategoryID = 6,
                            SubCategoryName = "Women's Clothing"
                        },
                        new
                        {
                            SubCategoryID = 36,
                            CategoryID = 6,
                            SubCategoryName = "Men's Clothing"
                        },
                        new
                        {
                            SubCategoryID = 37,
                            CategoryID = 6,
                            SubCategoryName = "Women's Accessories - Cosmetics - Personal Care"
                        },
                        new
                        {
                            SubCategoryID = 38,
                            CategoryID = 6,
                            SubCategoryName = "Men's Accessories - Personal Care"
                        },
                        new
                        {
                            SubCategoryID = 39,
                            CategoryID = 7,
                            SubCategoryName = "Birds - Pigeons"
                        },
                        new
                        {
                            SubCategoryID = 40,
                            CategoryID = 7,
                            SubCategoryName = "Cats"
                        },
                        new
                        {
                            SubCategoryID = 41,
                            CategoryID = 7,
                            SubCategoryName = "Dogs"
                        },
                        new
                        {
                            SubCategoryID = 42,
                            CategoryID = 7,
                            SubCategoryName = "Other Pets & Animals"
                        },
                        new
                        {
                            SubCategoryID = 43,
                            CategoryID = 7,
                            SubCategoryName = "Accessories - Pet Care Products"
                        },
                        new
                        {
                            SubCategoryID = 44,
                            CategoryID = 8,
                            SubCategoryName = "Baby & Mom Healthcare"
                        },
                        new
                        {
                            SubCategoryID = 45,
                            CategoryID = 8,
                            SubCategoryName = "Baby Clothing"
                        },
                        new
                        {
                            SubCategoryID = 46,
                            CategoryID = 8,
                            SubCategoryName = "Baby Feeding Tools"
                        },
                        new
                        {
                            SubCategoryID = 47,
                            CategoryID = 8,
                            SubCategoryName = "Cribs - Strollers - Carriers"
                        },
                        new
                        {
                            SubCategoryID = 48,
                            CategoryID = 8,
                            SubCategoryName = "Toys"
                        },
                        new
                        {
                            SubCategoryID = 49,
                            CategoryID = 8,
                            SubCategoryName = "Other Baby Items"
                        },
                        new
                        {
                            SubCategoryID = 50,
                            CategoryID = 9,
                            SubCategoryName = "Antiques - Collectibles"
                        },
                        new
                        {
                            SubCategoryID = 51,
                            CategoryID = 9,
                            SubCategoryName = "Bicycles"
                        },
                        new
                        {
                            SubCategoryID = 52,
                            CategoryID = 9,
                            SubCategoryName = "Books"
                        },
                        new
                        {
                            SubCategoryID = 53,
                            CategoryID = 9,
                            SubCategoryName = "Board - Card Games"
                        },
                        new
                        {
                            SubCategoryID = 54,
                            CategoryID = 9,
                            SubCategoryName = "Movies - Music"
                        },
                        new
                        {
                            SubCategoryID = 55,
                            CategoryID = 9,
                            SubCategoryName = "Musical Instruments"
                        },
                        new
                        {
                            SubCategoryID = 56,
                            CategoryID = 9,
                            SubCategoryName = "Sports Equipment"
                        },
                        new
                        {
                            SubCategoryID = 57,
                            CategoryID = 9,
                            SubCategoryName = "Study Tools"
                        },
                        new
                        {
                            SubCategoryID = 58,
                            CategoryID = 9,
                            SubCategoryName = "Tickets - Vouchers"
                        },
                        new
                        {
                            SubCategoryID = 59,
                            CategoryID = 9,
                            SubCategoryName = "Luggage"
                        },
                        new
                        {
                            SubCategoryID = 60,
                            CategoryID = 9,
                            SubCategoryName = "Other Items"
                        },
                        new
                        {
                            SubCategoryID = 61,
                            CategoryID = 10,
                            SubCategoryName = "Accounting, Finance & Banking"
                        },
                        new
                        {
                            SubCategoryID = 62,
                            CategoryID = 10,
                            SubCategoryName = "Engineering"
                        },
                        new
                        {
                            SubCategoryID = 63,
                            CategoryID = 10,
                            SubCategoryName = "Designers"
                        },
                        new
                        {
                            SubCategoryID = 64,
                            CategoryID = 10,
                            SubCategoryName = "Customer Service & Call Center"
                        },
                        new
                        {
                            SubCategoryID = 65,
                            CategoryID = 10,
                            SubCategoryName = "Workers and Technicians"
                        },
                        new
                        {
                            SubCategoryID = 66,
                            CategoryID = 10,
                            SubCategoryName = "Management & Consulting"
                        },
                        new
                        {
                            SubCategoryID = 67,
                            CategoryID = 10,
                            SubCategoryName = "Drivers & Delivery"
                        },
                        new
                        {
                            SubCategoryID = 68,
                            CategoryID = 10,
                            SubCategoryName = "Education"
                        },
                        new
                        {
                            SubCategoryID = 69,
                            CategoryID = 10,
                            SubCategoryName = "HR"
                        },
                        new
                        {
                            SubCategoryID = 70,
                            CategoryID = 10,
                            SubCategoryName = "Tourism, Travel & Hospitality"
                        },
                        new
                        {
                            SubCategoryID = 71,
                            CategoryID = 10,
                            SubCategoryName = "IT - Telecom"
                        },
                        new
                        {
                            SubCategoryID = 72,
                            CategoryID = 10,
                            SubCategoryName = "Marketing and Public Relations"
                        },
                        new
                        {
                            SubCategoryID = 73,
                            CategoryID = 10,
                            SubCategoryName = "Medical, Healthcare, & Nursing"
                        },
                        new
                        {
                            SubCategoryID = 74,
                            CategoryID = 10,
                            SubCategoryName = "Sales"
                        },
                        new
                        {
                            SubCategoryID = 75,
                            CategoryID = 10,
                            SubCategoryName = "Secretarial"
                        },
                        new
                        {
                            SubCategoryID = 76,
                            CategoryID = 10,
                            SubCategoryName = "Guards and Security"
                        },
                        new
                        {
                            SubCategoryID = 77,
                            CategoryID = 10,
                            SubCategoryName = "Legal - Lawyers"
                        },
                        new
                        {
                            SubCategoryID = 78,
                            CategoryID = 10,
                            SubCategoryName = "Other Job"
                        },
                        new
                        {
                            SubCategoryID = 79,
                            CategoryID = 11,
                            SubCategoryName = "Agriculture"
                        },
                        new
                        {
                            SubCategoryID = 80,
                            CategoryID = 11,
                            SubCategoryName = "Construction"
                        },
                        new
                        {
                            SubCategoryID = 81,
                            CategoryID = 11,
                            SubCategoryName = "Industrial Equipment"
                        },
                        new
                        {
                            SubCategoryID = 82,
                            CategoryID = 11,
                            SubCategoryName = "Medical Equipment"
                        },
                        new
                        {
                            SubCategoryID = 83,
                            CategoryID = 11,
                            SubCategoryName = "Office Furniture & Equipment"
                        },
                        new
                        {
                            SubCategoryID = 84,
                            CategoryID = 11,
                            SubCategoryName = "Restaurants Equipment"
                        },
                        new
                        {
                            SubCategoryID = 85,
                            CategoryID = 11,
                            SubCategoryName = "Whole Business for Sale"
                        },
                        new
                        {
                            SubCategoryID = 86,
                            CategoryID = 11,
                            SubCategoryName = "Other Business, Industrial &"
                        },
                        new
                        {
                            SubCategoryID = 87,
                            CategoryID = 11,
                            SubCategoryName = "Agriculture"
                        },
                        new
                        {
                            SubCategoryID = 88,
                            CategoryID = 12,
                            SubCategoryName = "Business"
                        },
                        new
                        {
                            SubCategoryID = 89,
                            CategoryID = 12,
                            SubCategoryName = "Car"
                        },
                        new
                        {
                            SubCategoryID = 90,
                            CategoryID = 12,
                            SubCategoryName = "Events"
                        },
                        new
                        {
                            SubCategoryID = 91,
                            CategoryID = 12,
                            SubCategoryName = "Health & Beauty"
                        },
                        new
                        {
                            SubCategoryID = 92,
                            CategoryID = 12,
                            SubCategoryName = "Maintenance"
                        },
                        new
                        {
                            SubCategoryID = 93,
                            CategoryID = 12,
                            SubCategoryName = "Medical"
                        },
                        new
                        {
                            SubCategoryID = 94,
                            CategoryID = 12,
                            SubCategoryName = "Movers"
                        },
                        new
                        {
                            SubCategoryID = 95,
                            CategoryID = 12,
                            SubCategoryName = "Pets"
                        },
                        new
                        {
                            SubCategoryID = 96,
                            CategoryID = 12,
                            SubCategoryName = "Education"
                        },
                        new
                        {
                            SubCategoryID = 97,
                            CategoryID = 12,
                            SubCategoryName = "Other Service"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Models.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Models.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Models.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Models.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("Models.Models.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Models.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Models.Post", b =>
                {
                    b.HasOne("Models.Models.Location", "Location")
                        .WithMany("Posts")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Models.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Models.ApplicationUser", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("SubCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Models.PostImage", b =>
                {
                    b.HasOne("Models.Models.Post", "Post")
                        .WithMany("PostImages")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Models.Models.SubCategory", b =>
                {
                    b.HasOne("Models.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Models.Models.ApplicationRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Models.Models.ApplicationUser", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Models.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Models.Models.Location", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Models.Models.Post", b =>
                {
                    b.Navigation("PostImages");
                });
#pragma warning restore 612, 618
        }
    }
}
